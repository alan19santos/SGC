<?php


namespace App\Repositories\Core;

use App\Models\Condominium;
use App\Repositories\Core\BaseRepository;
use App\Exceptions\CredentialsException;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Support\Facades\DB;

class CondominiumRepository extends  BaseRepository {

    public function __construct(private readonly Condominium $condominium) {
        parent::__construct($condominium);
    }

    public function getAll(): Collection {
        return $this->condominium->all();
    }

    public function findWhere(string $column, string $value): Collection
    {
        return parent::findWhere($column, $value); // TODO: Change the autogenerated stub
    }

    public function findByName(string $value) {
        return $this->condominium->where('name', $value)->first();
    }

    public function paginate(int $totalPage = 10): LengthAwarePaginator
    {
        return parent::paginate($totalPage); // TODO: Change the autogenerated stub
    }

    public function store(array $data): void
    {
        try {
            DB::beginTransaction();
            $this->condominium->create($data);
            DB::commit();
        } catch (\Exception $th) {
            DB::rollback();
            throw new CredentialsException($th->getMessage());
        }
    }


    public function applyFilter(array $items)
    {
        $relationship = $this->condominium;

        foreach ($items as $key => $value) {
            if ($value) {
                if (in_array($key, ['name', 'address','city','qtd_tower','qtd_ap'])) {
                    if ($key == 'name') {
                        $relationship->whereRaw("UPPER(condominium.name) like UPPER('%{$value}%')");
                    }
                    if ($key == 'address') {
                        $relationship->whereRaw("UPPER(condominium.address) like UPPER('%{$value}%')");
                    }
                    if ($key == 'city') {
                        $relationship->whereRaw("UPPER(condominium.city) like UPPER('%{$value}%')");
                    }
                    if ($key == 'qtd_tower') {
                        $relationship->where("condominium.qtd_tower", $value);
                    }
                    if ($key == 'qtd_ap') {
                        $relationship->where("condominium.qtd_ap", $value);
                    }
                }
            }
        }

        $totalPage = 10;
        return $relationship->orderBy('condominium.name')->paginate($totalPage);
    }


}
